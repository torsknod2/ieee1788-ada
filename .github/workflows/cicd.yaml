# IEEE 1788 Interval Arithmetic native library for Ada
# Copyright (C) 2024,2025 Torsten Knodt

# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3.0 of the License, or (at your option) any later version.

# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

# As a special exception to the GNU Lesser General Public License version 3
# ("LGPL3"), the copyright holders of this Library give you permission to convey
# to a third party a Combined Work that links statically or dynamically to this
# Library without providing any Minimal Corresponding Source or Minimal
# Application Code as set out in 4d or providing the installation information set
# out in section 4e, provided that you comply with the other provisions of LGPL3
# and provided that you meet, for the Application the terms and conditions of the
# license(s) which apply to the Application.

# Except as stated in this special exception, the provisions of LGPL3 will
# continue to comply in full to this Library. If you modify this Library, you
# may apply this exception to your version of this Library, but you are not
# obliged to do so. If you do not wish to do so, delete this exception statement
# from your version. This exception does not (and cannot) modify any license terms
# which apply to the Application, with which you must still comply.

name: CI/ CD

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id}}
  cancel-in-progress: true

permissions: {}

jobs:
  pre-commit:
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            proxy.golang.org:443
            pypi.org:443
            registry.npmjs.org:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
        with:
          cache: pip

      - name: Install pre-commit
        run: pip install pre-commit==4.1.0

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

  GNATprove:
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            objects.githubusercontent.com:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Alire
        uses: alire-project/setup-alire@678ded26f00993ff4ae2ab42248c44e887c1f2e7 # v4

      - name: Install FSF toolchain
        uses: alire-project/alr-install@b9d8855d9aba7d57fa27e70c1e6f8218f8c127c0
        with:
          crates: gnat_native gprbuild gnatprove

      - name: Alire Validation Build
        run: alr --chdir=$GITHUB_WORKSPACE --non-interactive build --validation

      - name: Alire GNATprove
        run: alr --chdir=$GITHUB_WORKSPACE --non-interactive gnatprove --proof=progressive:all --level=4 -j0 --checks-as-errors=on --warnings=error

      - name: Publish GNATprove Output
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: gnatprove.out
          path: obj/validation/gnatprove/gnatprove.out

  Test:
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            objects.githubusercontent.com:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Alire
        uses: alire-project/setup-alire@678ded26f00993ff4ae2ab42248c44e887c1f2e7 # v4

      - name: Install FSF toolchain
        uses: alire-project/alr-install@b9d8855d9aba7d57fa27e70c1e6f8218f8c127c0
        with:
          crates: gnat_native gprbuild gnatcov

      - name: Build and install gnatcov_rts_full
        run: |
          export GNATCOV_RTS_BUILD_PATH="${{ runner.temp }}/gnatcov_rts-build"
          export GNATCOV_RTS_INSTALL_PATH="${{ runner.temp }}/gnatcov_rts-install"
          mkdir -p "${GNATCOV_RTS_BUILD_PATH}"
          cd "${GNATCOV_RTS_BUILD_PATH}"
          gprbuild -p -P$GITHUB_WORKSPACE/alire_prefix/share/gnatcoverage/gnatcov_rts/gnatcov_rts_full.gpr
          gprinstall -p -P$GITHUB_WORKSPACE/alire_prefix/share/gnatcoverage/gnatcov_rts/gnatcov_rts_full.gpr --prefix="${GNATCOV_RTS_INSTALL_PATH}"
          find "${GNATCOV_RTS_INSTALL_PATH}"
          echo "GPR_PROJECT_PATH=${GNATCOV_RTS_INSTALL_PATH}/share/gpr:${GPR_PROJECT_PATH}" >> $GITHUB_ENV

      - name: Alire Generate Configuration
        run: alr --chdir=$GITHUB_WORKSPACE/tests --non-interactive --force build --validation --stop-after=generation

      - name: Alire GNATcov Instrument
        run: alr --chdir=$GITHUB_WORKSPACE/tests --non-interactive --force gnatcov instrument --level=stmt+mcdc --dump-trigger=atexit --projects=$GITHUB_WORKSPACE/ieee1788.gpr

      - name: Alire Build Instrumented Test Code
        env:
          GPR_PROJECT_PATH: ${{ env.GPR_PROJECT_PATH }}
        run: alr --chdir=$GITHUB_WORKSPACE/tests --non-interactive --force build --validation -- --src-subdirs=gnatcov-instr --implicit-with=gnatcov_rts_full

      - name: Alire Run Instrumented Tests
        run: alr --chdir=$GITHUB_WORKSPACE/tests --non-interactive --force run --skip-build --args "$GITHUB_WORKSPACE/aunit_results.xml"

      - name: Publish AUnit Results
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: aunit_results.xml
          path: aunit_results.xml

      - name: Publish All
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: Test_Result
          path: .

  UploadCodeCoverage:
    needs: [Test]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        # TODO Add asm later, when we also have object coverage
        # TODO "GNATquilt" is missing for dhtml, whatever this is.
        # Wait for SARIF support
        annotate: ["xcov+", "html+", "report"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            objects.githubusercontent.com:443

      - name: Download Test Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: Test_Result

      - name: Setup Alire
        uses: alire-project/setup-alire@678ded26f00993ff4ae2ab42248c44e887c1f2e7 # v4

      - name: Install FSF toolchain
        uses: alire-project/alr-install@b9d8855d9aba7d57fa27e70c1e6f8218f8c127c0
        with:
          crates: gnatcov

      - name: Alire GNATcov Report in ${{ matrix.annotate }}
        run: find . -name "*.srctrace" -print0 | xargs -0 alr --chdir=$GITHUB_WORKSPACE/tests --non-interactive --force gnatcov coverage --annotate=${{ matrix.annotate }} --output-dir $GITHUB_WORKSPACE/gnatcov_out --level=stmt+mcdc --projects ieee1788.gpr

      - name: Publish Coverage Output
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: gnatcov_${{ matrix.annotate }}
          path: .

  PublishCodeCoverage:
    needs: [UploadCodeCoverage] # TODO Unnecessarily waiting for all matrix variants due to https://github.com/orgs/community/discussions/42335
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            objects.githubusercontent.com:443
            uploader.codecov.io:443
            pypi.org:443
            files.pythonhosted.org:443

      - name: Download Coverage Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: gnatcov_xcov+

      - name: Setup Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
        with:
          cache: pip

      - name: Install coveragepy
        run: pip install coveragepy==1.6.0

      - uses: alire-project/gnatcov-to-codecovio-action@54d55a0259f7b7a272cb25232f0d29a57ee2b699
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  Publish:
    needs: [pre-commit, GNATprove, Test, FlawFinder, ScoreCardAnalysis]
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            objects.githubusercontent.com:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Alire
        uses: alire-project/setup-alire@678ded26f00993ff4ae2ab42248c44e887c1f2e7 # v4

      - name: Install FSF toolchain
        uses: alire-project/alr-install@b9d8855d9aba7d57fa27e70c1e6f8218f8c127c0
        with:
          crates: gnat_native gprbuild

      - name: Alire Publish
        run: alr --chdir=$GITHUB_WORKSPACE --non-interactive --force publish ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && '' || '--skip-submit' }} --tar . ${{ github.sha }}

      - name: Publish Alire Archive
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: alire-archive
          path: alire/archive/

  GNATdoc:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        backend: [html, rst]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Alire
        uses: alire-project/setup-alire@678ded26f00993ff4ae2ab42248c44e887c1f2e7 # v4

      - name: Install FSF toolchain with GNATdoc
        uses: alire-project/alr-install@b9d8855d9aba7d57fa27e70c1e6f8218f8c127c0
        with:
          crates: gnat_native gprbuild gnatdoc

      - name: Alire Generate Configuration
        run: alr --chdir=$GITHUB_WORKSPACE/tests --non-interactive --force build --stop-after=generation

      - name: Fix GNATdoc installation
        # TODO Open workaround for https://github.com/AdaCore/gnatdoc/issues/30
        run: ln -sv $GITHUB_WORKSPACE/alire_prefix/share/share/gnatdoc $GITHUB_WORKSPACE/alire_prefix/share || true

      - name: Generate ${{ matrix.backend }} Documentation
        run: |
          gnatdoc --output-dir=doc/${{ matrix.backend }} \
            --generate body \
            --backend ${{ matrix.backend }} \
            --warnings \
            --html-oop-style \
            --style leading \
            ieee1788.gpr 2>&1 | tee gnatdoc.log
          GNATDOC_EXIT=${PIPESTATUS[0]}
          if grep -q ": warning: " gnatdoc.log; then
            sed -n 's/\(.*\): warning: \(.*\)/::warning::\1: \2/p' gnatdoc.log
          fi
          exit $GNATDOC_EXIT

      - name: Upload Documentation Artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa
        with:
          name: GNATdoc-${{ matrix.backend }}
          path: doc/${{ matrix.backend }}

  DeployGNATdocToGitHubPages:
    needs: GNATdoc
    if: github.ref == 'refs/heads/main' || (startsWith(github.ref, 'refs/tags/') && github.event.base_ref == 'refs/heads/main')
    runs-on: ubuntu-24.04
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e
        with:
          artifact_name: GNATdoc-html
          preview: ${{ startsWith(github.ref, 'refs/tags/') && 'false' || 'true' }}

  GNATdocRST2:
    if: false # FIXME https://github.com/torsknod2/ieee1788-ada/issues/20
    name: GNATdoc rst to ${{ matrix.format }}
    strategy:
      matrix:
        include:
          - format: html
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --math-output=MathJax
          - format: html4
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --math-output=MathJax
          - format: html5
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --math-output=MathJax --section-self-link
          - format: latex
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --embed-stylesheet --use-part-section --use-latex-docinfo --use-latex-abstract
          - format: man
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes
          - format: odt
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --add-syntax-highlighting --create-links
          - format: s5
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --visible-controls --current-slide
          - format: xetex
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --embed-stylesheet --use-part-section --use-latex-docinfo --use-latex-abstract
          - format: xml
            params: --generator --time --source-link --verbose --strict --traceback --output-encoding=us-ascii:strict --pep-references --rfc-references --smart-quotes=yes --newlines --indents
    needs: GNATdoc # TODO Unnecessarily waiting for all matrix variants due to https://github.com/orgs/community/discussions/42335
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
            files.pythonhosted.org:443

      - name: Download Documentation Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: GNATdoc-rst
          path: doc/rst

      - name: Setup Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
        with:
          cache: pip

      - name: Install docutils and sphinxcontrib-adadomain
        run: pip install -U docutils==0.21.2 git+https://github.com/AdaCore/sphinxcontrib-adadomain

      - name: rst to ${{ matrix.format }}
        id: rst_to
        run: for SOURCE in doc/rst/*.rst; do rst2${{ matrix.format }} ${{ matrix.params }} --output=doc/${{ matrix.format }} "${SOURCE}"; done

      - name: Show help on failure
        if: failure() && steps.rst_to.conclusion == 'failure'
        run: rst2${{ matrix.format }} --help
        continue-on-error: true

      - name: Upload Documentation Artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: GNATdoc-rst-${{ matrix.format }}
          path: doc/${{ matrix.format }}
  FlawFinder:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: flawfinder_scan
        uses: david-a-wheeler/flawfinder@c57197cd6061453f10a496f30a732bc1905918d1
        with:
          arguments: "--sarif ./"
          output: "flawfinder_results.sarif"

      - name: Upload analysis results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0
        with:
          sarif_file: ${{github.workspace}}/flawfinder_results.sarif
  ScoreCardAnalysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # Needed for Code scanning upload
      security-events: write
      # Needed for GitHub OIDC token if publish_results is true
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: "Checkout code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: false

      - name: "Run analysis"
        uses: ossf/scorecard-action@62b2cac7ed8198b15735ed49ab1e5cf35480ba46
        with:
          results_file: results.sarif
          results_format: sarif
          # Scorecard team runs a weekly scan of public GitHub repos,
          # see https://github.com/ossf/scorecard#public-data.
          # Setting `publish_results: true` helps us scale by leveraging your workflow to
          # extract the results instead of relying on our own infrastructure to run scans.
          # And it's free for you!
          publish_results: true

      # Upload the results as artifacts (optional). Commenting out will disable
      # uploads of run results in SARIF format to the repository Actions tab.
      # https://docs.github.com/en/actions/advanced-guides/storing-workflow-data-as-artifacts
      - name: "Upload artifact"
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5
          compression-level: 9

      # Upload the results to GitHub's code scanning dashboard (optional).
      # Commenting out will disable upload of results to your repo's Code Scanning dashboard
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0
        with:
          sarif_file: results.sarif
