# IEEE 1788 Interval Arithmetic native library for Ada
# Copyright (C) 2024,2025 Torsten Knodt

# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3.0 of the License, or (at your option) any later version.

# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

# As a special exception to the GNU Lesser General Public License version 3
# ("LGPL3"), the copyright holders of this Library give you permission to convey
# to a third party a Combined Work that links statically or dynamically to this
# Library without providing any Minimal Corresponding Source or Minimal
# Application Code as set out in 4d or providing the installation information set
# out in section 4e, provided that you comply with the other provisions of LGPL3
# and provided that you meet, for the Application the terms and conditions of the
# license(s) which apply to the Application.

# Except as stated in this special exception, the provisions of LGPL3 will
# continue to comply in full to this Library. If you modify this Library, you
# may apply this exception to your version of this Library, but you are not
# obliged to do so. If you do not wish to do so, delete this exception statement
# from your version. This exception does not (and cannot) modify any license terms
# which apply to the Application, with which you must still comply.

repos:
- repo: https://github.com/gitleaks/gitleaks
  rev: v8.24.0
  hooks:
  - id: gitleaks

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v5.0.0
  hooks:
  - id: end-of-file-fixer
  - id: trailing-whitespace
  - id: check-yaml
  - id: check-toml
  - id: check-added-large-files
    args: ['--maxkb=500']
  - id: check-merge-conflict
  - id: mixed-line-ending
    args: ['--fix=lf']
  - id: detect-private-key
  - id: check-case-conflict

- repo: https://github.com/jumanjihouse/pre-commit-hooks
  rev: 3.0.0
  hooks:
  - id: shellcheck
  - id: shfmt

- repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.44.0
  hooks:
  - id: markdownlint
    args: ["--fix"]

- repo: https://github.com/Lucas-C/pre-commit-hooks
  rev: v1.5.5
  hooks:
  - id: remove-crlf
  - id: forbid-tabs
    exclude: ^\.vscode/
  # - id: insert-license
  #   name: Check license headers
  #   files: \.(adb|ads|adc|gpr|py|yaml|yml|sh|toml|txt)$|CODEOWNERS|\.gitconfig$
  #   args:
  #     - --license-filepath
  #     - LICENSE.md
  #     - --comment-style
  #     - "--  "
  #     - --comment-style
  #     - "#"
  #     - --comment-style
  #     - "||"
  #     - --comment-style
  #     - '"""||"""'

- repo: https://github.com/python-jsonschema/check-jsonschema
  rev: 0.31.2
  hooks:
    - id: check-github-workflows
    - id: check-dependabot

- repo: https://github.com/pycqa/isort
  rev: 6.0.0
  hooks:
    - id: isort
      name: Sort Python imports

- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.15.0
  hooks:
    - id: mypy
      additional_dependencies: ['semver', 'tomlkit']

- repo: https://github.com/pylint-dev/pylint
  rev: v3.3.4
  hooks:
  - id: pylint
    additional_dependencies: ['semver', 'tomlkit']

- repo: local
  hooks:
    - id: version-check
      name: Check semantic versions
      entry: hooks/version_check.py
      language: python
      additional_dependencies: ['semver', 'tomlkit']
      files: 'alire\.toml$'
      pass_filenames: true
      always_run: true

    - id: gnatpp-implementation
      name: Format Ada files of the implementation
      entry: bash -c 'cd "$(git rev-parse --show-toplevel)" && alr exec -P1 gnatpp -- -U -j0 --wide-character-encoding=8 "$@"'
      language: system
      files: ^(src/.*\.(adb|ads)|.*\.gpr)$
      pass_filenames: true

    - id: gnatpp-tests
      name: Format Ada files of the tests
      entry: bash -c 'cd "$(git rev-parse --show-toplevel)" && alr --chdir=tests exec -P1 gnatpp -- -U -j0 --wide-character-encoding=8 "$@"'
      language: system
      files: ^tests/(src/.*\.(adb|ads)|.*\.gpr)$
      pass_filenames: true

    - id: unit-tests
      name: Execute unit tests
      entry: bash -c 'cd "$(git rev-parse --show-toplevel)" && alr --chdir=tests run'
      language: system
      files: \.(gpr|adb|ads)$
      pass_filenames: false
